name: Test

on:
  push:
    branches:
      - main

  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pre-commit
            ~/.cache/pip
          key: lint-${{ hashFiles('.pre-commit-config.yaml') }}

      - name: Install pre-commit
        run: pip install -U pre-commit

      - name: Lint
        run: pre-commit run --color=always --all-files

  typing:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
            ~/.cache/pypoetry
          key: typing-${{ hashFiles('pyproject.toml') }}

      - name: Setup Node
        uses: actions/setup-node@v3

      - name: Install Poetry
        run: |
          pip install -U poetry
          poetry config virtualenvs.create false

      - name: Install package
        run: poetry install

      - name: Install Pyright
        run: npm install -g --no-package-lock --no-save pyright

      - name: Check types
        run: pyright

  test:
    runs-on: ubuntu-latest
    env:
      LD_LIBRARY_PATH: /usr/local/lib

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
            ~/.cache/pypoetry
          key: test-${{ hashFiles('pyproject.toml') }}

      - name: Install JACK
        run: |
          git clone https://github.com/jackaudio/jack2 /tmp/jack2
          cd /tmp/jack2
          ./waf configure --prefix=/usr/local
          sudo ./waf install

      - name: Install Poetry
        run: pip install -U poetry

      - run: |
          sudo -s
          for opt in $(ulimit -a | sed 's/.*\-\([a-z]\)[^a-zA-Z].*$/\1/'); do
              ulimit -$opt unlimited
          done

      - name: Install package
        run: poetry install
      - uses: mxschmitt/action-tmate@v3
      - name: Test
        run: |
          poetry run pytest --color=yes --cov
